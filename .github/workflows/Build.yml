name: CI

on:
  workflow_dispatch:
    inputs:
      Environment:
        description: 'Targeted environment : Prod or Dev (default)'
        required: true
        default: 'Dev'
      Configuration:
        description: 'Type of build : Release or Debug (default)'
        required: true
        default: 'Debug'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
 Build-Log4Posh-for-powershell-v5-1:
    runs-on: windows-latest
    defaults:
      run:
        shell: powershell

    steps:
      - uses: actions/checkout@v3
      - name : Add 'actionlint' extension for Github Cli
        #shell: powershell
        run: |
          gh extension install cschleiden/gh-actionlint

      - name: Set Required repositories
        #shell: powershell
        run: |
            $Repositories=@(
              [PsCustomObject]@{
                  name='OttoMatt'
                  publishlocation='https://www.myget.org/F/ottomatt/api/v2/package'
                  sourcelocation='https://www.myget.org/F/ottomatt/api/v2'
              },
              [PsCustomObject]@{
                  name='DevOttoMatt'
                  publishlocation='https://www.myget.org/F/devottomatt/api/v2/package'
                  sourcelocation='https://www.myget.org/F/devottomatt/api/v2'
              }
            )
            $RepositoryNames=[System.Collections.Arraylist]::New()
            Foreach ($Repository in $Repositories)
            {
              $Name=$Repository.Name
              try{
                  $RepositoryNames.Add($Name) > $Null
                  Get-PSRepository $Name -EA Stop >$null
              }catch {
                  if ($_.CategoryInfo.Category -ne 'ObjectNotFound')
                  { throw $_ }
                  else
                  {
                    $Parameters=@{
                        Name=$Name
                        SourceLocation=$Repository.SourceLocation
                        PublishLocation=$Repository.PublishLocation
                        InstallationPolicy='Trusted'
                    }
                    Write-Output "Register repository '$($Repository.Name)'"
                    Register-PSRepository @Parameters
                  }
              }
            }
      - name: PowerShell module Cache
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v5.2
        with:
          modules-to-cache: InvokeBuild::, platyPS::,BuildHelpers,PowerShell-Beautifier,MeasureLocalizedData,Template
          shell: powershell
          updatable: "true"
          prefixidentifier: "true"

      - name: Invoke build and publish
        env:
          MYGET : ${{ secrets.MYGET }}
          PSGALLERY : ${{ secrets.PSGALLERY }}
        #shell: powershell
        run: |
          Invoke-Build -Task Publish -Configuration ${{ github.event.inputs.Configuration }} -Environnement ${{ github.event.inputs.Environment }}
          Write-warning "Feed : https://www.myget.org/gallery/devottomatt"
